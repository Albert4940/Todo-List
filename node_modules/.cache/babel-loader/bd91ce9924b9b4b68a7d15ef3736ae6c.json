{"ast":null,"code":"var _jsxFileName = \"E:\\\\REACT_LINKEDIN\\\\exo\\\\to-do-list\\\\src\\\\components\\\\ToDoList.js\";\nimport React, { Component } from 'react';\nimport ToDo from './ToDo';\nimport { connect } from 'react-redux';\n\nclass ToDoList extends Component {\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n      className: \"m-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, \"Liste de t\\xE2ches\"), React.createElement(\"ul\", {\n      className: \"list-group m-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, this.props.tasks.map(task => React.createElement(ToDo, {\n      task: task,\n      key: task.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }))));\n  }\n\n} // const ToDoList = ({tasks, match, onToggleCompleted}) => {\n//     let filteredTasks\n//     switch(match.params.filter){\n//         case 'completed':\n//             filteredTasks = tasks.filter(task => task.completed)\n//         break;\n//         default:\n//             filteredTasks = tasks\n//     }\n//     if(filteredTasks.length === 0){\n//         return(\n//             <>\n//                 <h1 className=\"m-3\">Liste de tâches</h1>\n//                 <ul className=\"list-group m-3\">\n//                    <li className=\"list-group m-3\">Aucune tache a afficher</li>\n//                 </ul>\n//             </>\n//             )\n//     }else{\n//         return(\n//             <>\n//                 <h1 className=\"m-3\">Liste de tâches</h1>\n//                 <ul className=\"list-group m-3\">\n//                     {\n//                         filteredTasks.map((task)=> <ToDo task={task} key={task.id} onToggleCompleted={onToggleCompleted}/>)\n//                     }\n//                 </ul>\n//             </>\n//             )\n//     }\n// }\n\n\nconst mapStateToProps = state => {\n  return {\n    tasks: state.tasks\n  };\n};\n\nexport default connect(mapStateToProps)(ToDoList);","map":{"version":3,"sources":["E:\\REACT_LINKEDIN\\exo\\to-do-list\\src\\components\\ToDoList.js"],"names":["React","Component","ToDo","connect","ToDoList","render","props","tasks","map","task","id","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,MAAMC,QAAN,SAAuBH,SAAvB,CAAgC;AAC5BI,EAAAA,MAAM,GAAE;AACJ,WACI,0CACI;AAAI,MAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEI;AAAI,MAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,GAAjB,CAAsBC,IAAD,IAAS,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEA,IAAZ;AAAkB,MAAA,GAAG,EAAEA,IAAI,CAACC,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA9B,CAFR,CAFJ,CADJ;AAUH;;AAZ2B,C,CAchC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACJL,IAAAA,KAAK,EAAEK,KAAK,CAACL;AADT,GAAP;AAGH,CAJD;;AAMA,eAAeJ,OAAO,CAACQ,eAAD,CAAP,CAAyBP,QAAzB,CAAf","sourcesContent":["import React, {Component} from 'react'\nimport ToDo from './ToDo'\nimport {connect} from 'react-redux'\n\nclass ToDoList extends Component{\n    render(){\n        return(\n            <>\n                <h1 className=\"m-3\">Liste de tâches</h1>\n                <ul className=\"list-group m-3\">\n                    {\n                        this.props.tasks.map((task)=> <ToDo task={task} key={task.id} />)\n                    }\n                </ul>\n            </>\n            )\n    }\n}\n// const ToDoList = ({tasks, match, onToggleCompleted}) => {\n//     let filteredTasks\n//     switch(match.params.filter){\n//         case 'completed':\n//             filteredTasks = tasks.filter(task => task.completed)\n//         break;\n//         default:\n//             filteredTasks = tasks\n//     }\n\n//     if(filteredTasks.length === 0){\n//         return(\n//             <>\n//                 <h1 className=\"m-3\">Liste de tâches</h1>\n//                 <ul className=\"list-group m-3\">\n//                    <li className=\"list-group m-3\">Aucune tache a afficher</li>\n//                 </ul>\n//             </>\n//             )\n\n//     }else{\n//         return(\n//             <>\n//                 <h1 className=\"m-3\">Liste de tâches</h1>\n//                 <ul className=\"list-group m-3\">\n//                     {\n//                         filteredTasks.map((task)=> <ToDo task={task} key={task.id} onToggleCompleted={onToggleCompleted}/>)\n//                     }\n//                 </ul>\n//             </>\n//             )\n//     }\n    \n// }\n\nconst mapStateToProps = (state) => {\n    return {\n       tasks: state.tasks\n    }\n}\n\nexport default connect(mapStateToProps)(ToDoList)"]},"metadata":{},"sourceType":"module"}