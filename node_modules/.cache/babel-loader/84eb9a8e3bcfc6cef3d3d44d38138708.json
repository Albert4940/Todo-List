{"ast":null,"code":"var _jsxFileName = \"E:\\\\REACT_LINKEDIN\\\\exo\\\\to-do-list\\\\src\\\\components\\\\ToDoList.js\";\nimport React from 'react';\nimport ToDo from './ToDo';\n\nconst ToDoList = ({\n  tasks,\n  match,\n  onToggleCompleted\n}) => {\n  let filteredTasks;\n\n  switch (match.params.filter) {\n    case 'completed':\n      filteredTasks = tasks.filter(task => task.completed);\n      break;\n\n    default:\n      filteredTasks = tasks;\n  }\n\n  if (filteredTasks.length === 0) {\n    return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n      className: \"m-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"Liste de t\\xE2ches\"), React.createElement(\"ul\", {\n      className: \"list-group m-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"list-group m-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"Aucune tache a afficher\")));\n  } else {\n    return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n      className: \"m-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Liste de t\\xE2ches\"), React.createElement(\"ul\", {\n      className: \"list-group m-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, filteredTasks.map(task => React.createElement(ToDo, {\n      task: task,\n      key: task.id,\n      onToggleCompleted: onToggleCompleted,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }))));\n  }\n};\n\nexport default ToDoList;","map":{"version":3,"sources":["E:\\REACT_LINKEDIN\\exo\\to-do-list\\src\\components\\ToDoList.js"],"names":["React","ToDo","ToDoList","tasks","match","onToggleCompleted","filteredTasks","params","filter","task","completed","length","map","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AACA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAAD,KAAuC;AACpD,MAAIC,aAAJ;;AACA,UAAOF,KAAK,CAACG,MAAN,CAAaC,MAApB;AACI,SAAK,WAAL;AACIF,MAAAA,aAAa,GAAGH,KAAK,CAACK,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,SAA1B,CAAhB;AACJ;;AACA;AACIJ,MAAAA,aAAa,GAAGH,KAAhB;AALR;;AAQA,MAAGG,aAAa,CAACK,MAAd,KAAyB,CAA5B,EAA8B;AAC1B,WACI,0CACI;AAAI,MAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEI;AAAI,MAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAI,MAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADH,CAFJ,CADJ;AASH,GAVD,MAUK;AACD,WACI,0CACI;AAAI,MAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEI;AAAI,MAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQL,aAAa,CAACM,GAAd,CAAmBH,IAAD,IAAS,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEA,IAAZ;AAAkB,MAAA,GAAG,EAAEA,IAAI,CAACI,EAA5B;AAAgC,MAAA,iBAAiB,EAAER,iBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA3B,CAFR,CAFJ,CADJ;AAUH;AAEJ,CAjCD;;AAmCA,eAAeH,QAAf","sourcesContent":["import React from 'react'\nimport ToDo from './ToDo'\nconst ToDoList = ({tasks, match, onToggleCompleted}) => {\n    let filteredTasks\n    switch(match.params.filter){\n        case 'completed':\n            filteredTasks = tasks.filter(task => task.completed)\n        break;\n        default:\n            filteredTasks = tasks\n    }\n\n    if(filteredTasks.length === 0){\n        return(\n            <>\n                <h1 className=\"m-3\">Liste de tâches</h1>\n                <ul className=\"list-group m-3\">\n                   <li className=\"list-group m-3\">Aucune tache a afficher</li>\n                </ul>\n            </>\n            )\n\n    }else{\n        return(\n            <>\n                <h1 className=\"m-3\">Liste de tâches</h1>\n                <ul className=\"list-group m-3\">\n                    {\n                        filteredTasks.map((task)=> <ToDo task={task} key={task.id} onToggleCompleted={onToggleCompleted}/>)\n                    }\n                </ul>\n            </>\n            )\n    }\n    \n}\n\nexport default ToDoList"]},"metadata":{},"sourceType":"module"}