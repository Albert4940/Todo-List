{"ast":null,"code":"var _jsxFileName = \"E:\\\\REACT_LINKEDIN\\\\exo\\\\to-do-list\\\\src\\\\components\\\\ToDoList.js\";\nimport React from 'react';\nimport ToDo from './ToDo';\n\nconst ToDoList = ({\n  tasks,\n  match\n}) => {\n  let filterdTasks;\n\n  switch (match.params.filter) {\n    case 'completed':\n      filterdTasks = tasks.filter(task => task.completed);\n      break;\n\n    default:\n      filterdTasks = tasks;\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    className: \"m-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Liste de t\\xE2ches\"), React.createElement(\"ul\", {\n    className: \"list-group m-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, filterdTasks.map(task => React.createElement(ToDo, {\n    task: task,\n    key: task.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }))));\n};\n\nexport default ToDoList;","map":{"version":3,"sources":["E:\\REACT_LINKEDIN\\exo\\to-do-list\\src\\components\\ToDoList.js"],"names":["React","ToDo","ToDoList","tasks","match","filterdTasks","params","filter","task","completed","map","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AACA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAD,KAAoB;AACjC,MAAIC,YAAJ;;AACA,UAAOD,KAAK,CAACE,MAAN,CAAaC,MAApB;AACI,SAAK,WAAL;AACIF,MAAAA,YAAY,GAAGF,KAAK,CAACI,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,SAA1B,CAAf;AACJ;;AACA;AACIJ,MAAAA,YAAY,GAAGF,KAAf;AALR;;AAOA,SACA,0CACI;AAAI,IAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEI;AAAI,IAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQE,YAAY,CAACK,GAAb,CAAkBF,IAAD,IAAS,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEA,IAAZ;AAAkB,IAAA,GAAG,EAAEA,IAAI,CAACG,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA1B,CAFR,CAFJ,CADA;AAUH,CAnBD;;AAqBA,eAAeT,QAAf","sourcesContent":["import React from 'react'\nimport ToDo from './ToDo'\nconst ToDoList = ({tasks, match}) => {\n    let filterdTasks\n    switch(match.params.filter){\n        case 'completed':\n            filterdTasks = tasks.filter(task => task.completed)\n        break;\n        default:\n            filterdTasks = tasks\n    }\n    return(\n    <>\n        <h1 className=\"m-3\">Liste de t√¢ches</h1>\n        <ul className=\"list-group m-3\">\n            {\n                filterdTasks.map((task)=> <ToDo task={task} key={task.id}/>)\n            }\n        </ul>\n    </>\n    )\n}\n\nexport default ToDoList"]},"metadata":{},"sourceType":"module"}